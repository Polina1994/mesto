(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r=t((function e(t,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n(this,"renderSection",(function(e){e.renderSection=e,e.forEach((function(e){return o._renderer(e)}))})),n(this,"addItem",(function(e){o._container.append(e)})),n(this,"addNewItem",(function(e){o._container.prepend(e)})),this._renderer=t,this._container=document.querySelector(r)}));function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n,r,o,i){var a=o.handleDeleteClick,u=o.handleLikeCard,c=o.handleDislikeCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._name=t.name,this._link=t.link,this._owner=t.owner._id,this._id=t._id,this._likes=t.likes,this.cardId=t._id,this.userId=i,this._cardSelector=n,this._handleCardClick=r,this._handleDeleteClick=a,this._handleLikeCard=u,this._handleDislikeCard=c,this._ownerId=this.userId===this._owner}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"getId",value:function(){return this._id}},{key:"_setEventListeners",value:function(){var e=this;this._trashBtn.addEventListener("click",(function(){return e._handleDeleteClick()})),this._cardLink.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._likeBtn.addEventListener("click",(function(){e._likeBtn.classList.contains("element__like-active")?(e.dislikeCard(),e._handleDislikeCard()):(e.likeCard(),e._handleLikeCard())}))}},{key:"_checkLikes",value:function(){var e=this;this._likes.forEach((function(t){t._id===e.userId&&e._likeBtn.classList.add("element__like-active")}))}},{key:"likeCard",value:function(){this._likeBtn.classList.add("element__like-active")}},{key:"dislikeCard",value:function(){this._likeBtn.classList.remove("element__like-active")}},{key:"renewLikes",value:function(e){this._likesCounter.textContent=e.likes.length}},{key:"_checkCardOwner",value:function(){if(!this._owner)return this._trashBtn.remove(),this._card}},{key:"deleteCard",value:function(){this._card.remove(),this._card=null}},{key:"generateCard",value:function(){return this._card=this._getTemplate(),this._cardPlace=this._card.querySelector(".element__title"),this._cardLink=this._card.querySelector(".element__image"),this._likeBtn=this._card.querySelector(".element__like"),this._trashBtn=this._card.querySelector(".element__trash"),this._likesCounter=this._card.querySelector(".element__count"),this._setEventListeners(),this._cardPlace.textContent=this._name,this._cardLink.src=this._link,this._cardLink.alt=this._name,this._checkCardOwner(),this.renewLikes(this._data),this._checkLikes(),this._card}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.disabled="disabled",this._buttonElement.classList.add(this._inactiveButtonClass)):(this._buttonElement.disabled="",this._buttonElement.classList.remove(this._inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_is-opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_is-opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close-button").addEventListener("click",(function(){return e.close()})),this._popup.addEventListener("mousedown",(function(t){return e._handleOverlayClose(t)}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function y(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._title=t._popup.querySelector(".popup-image__title"),t._image=t._popup.querySelector(".popup-image__image"),t}return t=a,(n=[{key:"open",value:function(e,t){p(_(a.prototype),"open",this).call(this),this._image.src=t,this._image.alt=e,this._title.textContent=e}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitFunction=t,n._popupForm=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._popupForm.querySelectorAll(".popup__input")),n._submitButton=n._popupForm.querySelector('[type="submit"]'),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;k(C(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._submitFunction(e._getInputValues())}))}},{key:"close",value:function(){k(C(a.prototype),"close",this).call(this),this._popupForm.reset()}},{key:"setLoadingState",value:function(e){e?(this._submitButton.textContent="Сохранение...",this._submitButton.setAttribute("disabled","true")):(this._submitButton.innerText="Сохранить",this._submitButton.hasAttribute("disabled")&&this._submitButton.removeAttribute("disabled"))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._confirmButton=t._popup.querySelector(".popup-confirm__button"),t._submitCallback=null,t}return t=a,(n=[{key:"open",value:function(e){j(R(a.prototype),"open",this).call(this),this._deleteCard=e}},{key:"setEventListeners",value:function(){var e=this;j(R(a.prototype),"setEventListeners",this).call(this),this._confirmButton.addEventListener("click",(function(t){t.preventDefault(),e._deleteCard()}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t.nameSelector),this._profileDescription=document.querySelector(t.descriptionSelector),this._profileAvatar=document.querySelector(t.profileAvatar)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,about:this._profileDescription.textContent,profileAvatar:this._profileAvatar.src}}},{key:"setUserInfo",value:function(e){this._profileName.textContent=e.name,this._profileDescription.textContent=e.about,this._profileAvatar.src=e.profileAvatar,this._id=e.userId}},{key:"getId",value:function(){return this._id}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserData",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._getResponseData)}},{key:"setUserData",value:function(e){var t=this,n=Object.assign({body:JSON.stringify(e),method:"PATCH",headers:this._headers});return fetch("".concat(this._baseUrl,"/users/me"),n).then((function(e){return t._getResponseData(e)}))}},{key:"addNewCard",value:function(e){var t=this,n=Object.assign({body:JSON.stringify(e),method:"POST",headers:this._headers});return fetch("".concat(this._baseUrl,"/cards"),n).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this,n=Object.assign({method:"DELETE",headers:this._headers});return fetch("".concat(this._baseUrl,"/cards/").concat(e),n).then((function(e){return t._getResponseData(e)}))}},{key:"likesCard",value:function(e){var t=this,n=Object.assign({method:"PUT",headers:this._headers});return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),n).then((function(e){return t._getResponseData(e)}))}},{key:"dislikeCard",value:function(e){var t=this,n=Object.assign({method:"DELETE",headers:this._headers});return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),n).then((function(e){return t._getResponseData(e)}))}},{key:"setNewAvatar",value:function(e){var t=this,n=Object.assign({body:JSON.stringify(e),method:"PATCH",headers:this._headers});return fetch("".concat(this._baseUrl,"/users/me/avatar"),n).then((function(e){return t._getResponseData(e)}))}},{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-46",headers:{authorization:"b728ad0c-8a51-4521-be05-924ef3deb392","Content-Type":"application/json"}});function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var N=document.querySelector(".popup-edit"),V=N.querySelector(".popup__input_value_name"),F=N.querySelector(".popup__input_value_job"),J=document.querySelector(".popup-add"),G=document.querySelector(".profile__edit-button"),H=document.querySelector(".profile__add-button"),M=document.querySelector(".popup-avatar"),z=document.querySelector(".profile__avatar-overlay"),$={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},K=new u($,N);K.enableValidation();var Q=new u($,J);Q.enableValidation();var W=new u($,M);W.enableValidation();var X=new v(".popup-image");X.setEventListeners();var Y=new O(".popup-edit",(function(e){Y.setLoadingState(!0),console.log(e.about),U.setUserData({name:e.name,about:e.about}).then((function(e){ne.setUserInfo({name:e.name,about:e.about,profileId:e._id,profileAvatar:e.avatar}),Y.close()})).catch((function(e){console.error(e)})).finally((function(){return Y.setLoadingState(!1)}))}));Y.setEventListeners();var Z=new O(".popup-add",(function(e){Z.setLoadingState(!0),U.addNewCard(e).then((function(e){re.addItem(oe(e))})).then((function(){Z.close()})).catch((function(e){console.error(e)})).finally((function(){return Z.setLoadingState(!1)}))}));Z.setEventListeners();var ee=new D(".popup-confirm");ee.setEventListeners();var te=new O(".popup-avatar",(function(e){te.setLoadingState(!0),U.setNewAvatar({avatar:e.avatar}).then((function(e){ne.setUserInfo({name:e.name,about:e.about,profileId:e._id,profileAvatar:e.avatar}),te.close()})).catch((function(e){console.error(e)})).finally((function(){return te.setLoadingState(!1)}))}));te.setEventListeners();var ne=new T({nameSelector:".profile__name",descriptionSelector:".profile__job",profileAvatar:".profile__avatar"}),re=new r((function(e){re.addItem(oe(e))}),".elements");function oe(e){var t=new i(e,".card",ie,{handleDeleteClick:function(){return function(e,t){ee.open((function(){U.deleteCard(e).then((function(){t.deleteCard(),ee.close()})).catch((function(e){console.error(e)}))}))}(e._id,t)},handleLikeCard:function(){U.likesCard(e._id,t).then((function(e){t.renewLikes(e)})).then((function(){t.likeCard()})).catch((function(e){console.log(e)}))},handleDislikeCard:function(){return U.dislikeCard(e._id,t).then((function(e){t.dislikeCard(),t.renewLikes(e)})).catch((function(e){console.error(e)}))},userId:ne.getId()});return t.generateCard()}function ie(e,t){X.open(e,t)}Promise.all([U.getUserData(),U.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?x(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ne.setUserInfo({name:o.name,about:o.about,profileId:o._id,profileAvatar:o.avatar}),re.renderSection(i)})).catch((function(e){console.log(e)})),G.addEventListener("click",(function(){var e;e=ne.getUserInfo(),V.value=e.name,F.value=e.about,Y.open(),K.resetValidation()})),H.addEventListener("click",(function(){Z.open(),Q.resetValidation()})),z.addEventListener("click",(function(){te.open(),W.resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,